UGANDA INSTITUTION OF INFORMATION AND COMMUNICATION TECHNOLOGY (UICT) NAKAWA.GROUP GGROUP MEMBERS      NAMES.                                                       REG. NONIWAHA GIDEON               2023/DC S/DAY/1095/GMATSIKO CRISTOPHER      2023/DCS/DAY/1616/GLAKICA PATRICIA                2023/DCS/DAY/1123/GMUHUMUZA IGNITIOUS   2023/DCS/DAY/1113/GNAMUGENYI ZAMZAM      2023/DCS/DAY/1100/GWe group G members Creating a proper enterprise application in Java requires us breaking down the project into structured modules. For a more formal and functional application suitable for both academic purposes and presentation to our lecturer Odokogyero Geoffrey, As group G members, we will give an outline of how this application should be built across multiple classes and files.Enterprise Application Structure for our application as group G. 1. Project Setup   - Java Development Kit (JDK): we shall ensure to have the latest JDK installed.   - IDE: as group G we can use IntelliJ IDEA or Eclipse.   - Database: we gonna Use MySQL or PostgreSQL for persistence.2. Our application Components   Each component of the project should be separated into different classes/files for better code management. Here's how we can organize it.Application Structuresrc ├── Main.java ├── models │    ├── Product.java │    ├── User.java │    └── Order.java ├── services │    ├── ProductService.java │    ├── UserService.java │    └── OrderService.java ├── database │    └── DatabaseConnection.java └── utils      └── EmailNotifier.javaWe have a Detailed Java Application Code as a group of G.1. Main.java (Entry Point)javaimport services.;import models.;import java.util.Scanner;public class Main {    public static void main(String[] args) {        ProductService productService = new ProductService();        UserService userService = new UserService();        OrderService orderService = new OrderService()         Scanner scanner = new Scanner(System.in);        boolean running = true()        while (running) {            System.out.println("\n--- Agriculture Application Menu ---");            System.out.println("1. Register User");            System.out.println("2. Add Product");            System.out.println("3. View Products");            System.out.println("4. Place Order");            System.out.println("5. View Orders");            System.out.println("6. Exit");            System.out.print("Enter choice: ");            int choice = scanner.nextInt();            scanner.nextLine();  // Consume newline            switch (choice) {                case 1:                    userService.registerUser(scanner);                    break;                case 2:                    productService.addProduct(scanner);                    break;                case 3:                    productService.viewProducts();                    break;                case 4:                    orderService.placeOrder(scanner, userService, productService);                    break;                case 5:                    orderService.viewOrders();                    break;                case 6:                    running = false;                    System.out.println("Exiting...");                    break;                default:                    System.out.println("Invalid choice, try again.");            }        }        scanner.close();    }}2. ModelsProduct.javajavapackage models;public class Product {    private int productId;    private String name;    private String category;    private double price;    private int quantity;  public Product(int productId, String name, String category, double price, int quantity) {        this.productId = productId;        this.name = name;        this.category = category;        this.price = price;        this.quantity = quantity;    }    public int getProductId() { return productId; }    public String getName() { return name; }    public String getCategory() { return category; }    public double getPrice() { return price; }    public int getQuantity() { return quantity; }    public void setQuantity(int quantity) { this.quantity = quantity; }@Override    public String toString() {        return "Product [ID=" + productId + ", Name=" + name + ", Category=" + category + ", Price=" + price + ", Quantity=" + quantity + "]";    }}User.javajavapackage models;public class User {    private int userId;    private String username;    private String password;    private String role;  // Admin, Seller, Buyer    public User(int userId, String username, String password, String role) {        this.userId = userId;        this.username = username;        this.password = password;        this.role = role;    } public int getUserId() { return userId; }    public String getUsername() { return username; }    public String getPassword() { return password; }    public String getRole() { return role; } @Override    public String toString() {        return "User [ID=" + userId + ", Username=" + username + ", Role=" + role + "]";    }}Order.java`javapackage models;public class Order {    private int orderId;    private User user;    private Product product;    private int quantity;    private String status;  // Pending, Shipped, Delivered    public Order(int orderId, User user, Product product, int quantity, String status) {        this.orderId = orderId;        this.user = user;        this.product = product;        this.quantity = quantity;        this.status = status;    }public int getOrderId() { return orderId; }    public User getUser() { return user; }    public Product getProduct() { return product; }    public int getQuantity() { return quantity; }    public void setStatus(String status) { this.status = status; }   @Override    public String toString() {        return "Order [ID=" + orderId + ", User=" + user.getUsername() + ", Product=" + product.getName() + ", Quantity=" + quantity + ", Status=" + status + "]";    }}3. Services that we have decided for it to provide.ProductService.javajavapackage services;import models.Product;import java.util.ArrayList;import java.util.List;import java.util.Scanner;public class ProductService {    private List<Product> productCatalog = new ArrayList<>();    private int productCounter = 1;   public void addProduct(Scanner scanner) {        System.out.print("Enter product name: ");        String name = scanner.nextLine();        System.out.print("Enter product category: ");        String category = scanner.nextLine();        System.out.print("Enter product price: ");        double price = scanner.nextDouble();        System.out.print("Enter product quantity: ");        int quantity = scanner.nextInt();        scanner.nextLine();  // Consume newline         Product product = new Product(productCounter++, name, category, price, quantity);        productCatalog.add(product);        System.out.println("Product added: " + product);    }   public void viewProducts() {        System.out.println("\n--- Product Catalog ---");        for (Product product : productCatalog) {            System.out.println(product);        }    }     public Product findProductById(int productId) {        for (Product product : productCatalog) {            if (product.getProductId() == productId) {                return product;            }        }        return null;    }}UserService.javajavapackage services;import models.User;import java.util.ArrayList;import java.util.List;import java.util.Scanner;public class UserService {    private List<User> users = new ArrayList<>();    private int userCounter = 1;public void registerUser(Scanner scanner) {        System.out.print("Enter username: ");        String username = scanner.nextLine();        System.out.print("Enter password: ");        String password = scanner.nextLine();        System.out.print("Enter role (Admin, Seller, Buyer): ");        String role = scanner.nextLine();      User user = new User(userCounter++, username, password, role);        users.add(user);        System.out.println("User registered: " + user);    }    public User findUserByUsername(String username) {        for (User user : users) {            if (user.getUsername().equals(username)) {                return user;            }        }        return null;    }}